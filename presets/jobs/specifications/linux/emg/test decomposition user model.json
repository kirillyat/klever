{
  "5.5": [
    {
      "fragments": [
        "ext-modules/decomposition_disabled/a_invoke.ko",
        "ext-modules/decomposition_disabled/b_invoke.ko",
        "ext-modules/decomposition_disabled/c_invoke.ko",
        "ext-modules/decomposition_disabled/c_without_b.ko",
        "ext-modules/decomposition_default/a_invoke.ko",
        "ext-modules/decomposition_default/b_invoke.ko",
        "ext-modules/decomposition_default/c_invoke.ko",
        "ext-modules/decomposition_default/c_without_b_invoke.ko",
        "ext-modules/decomposition_linear/a_b_invoke.ko",
        "ext-modules/decomposition_linear/c_invoke.ko"
      ],
      "model": {
        "functions models": {},
        "environment processes": {
          "base/base": {
            "actions": {
              "call_a": {
                "comment": "Call 'a' callback.",
                "trace relevant": true,
                "statements": [
                  "a(%a_param%);"
                ]
              },
              "call_b": {
                "comment": "Call 'b' callback.",
                "trace relevant": true,
                "statements": [
                  "b(%b_param%);"
                ]
              },
              "register_base": {
                "comment": "Activate the first calling callbacks transition system.",
                "parameters": [],
                "replicative": true,
                "savepoints": {
                  "first_savepoint": {
                    "statements": [
                      "%a_param% = 1;",
                      "%b_param% = 1;"
                    ]
                  }
                }
              },
              "register_c": {
                "comment": "Activate the second calling callbacks transition system.",
                "parameters": ["%c_param%"]
              }
            },
            "category": "base",
            "comment": "Invoke test callbacks.",
            "declarations": {
              "environment model": {
                "& a": "extern void a(int param);",
                "& b": "extern void b(int param);"
              }
            },
            "labels": {
              "a_param": {
                "declaration": "int a_param",
                "value": "0"
              },
              "b_param": {
                "declaration": "int b_param",
                "value": "0"
              },
              "c_param": {
                "declaration": "int c_param",
                "value": "1"
              }
            },
            "process": "(!register_base).(<call_a> | <call_b>.[register_c])"
          },
          "base/advanced": {
            "actions": {
              "call_c": {
                "comment": "Call 'c' callback.",
                "trace relevant": true,
                "statements": [
                  "c(%c_param%);"
                ]
              },
              "register_c": {
                "comment": "Activate the second calling callbacks transition system.",
                "parameters": ["%c_param%"],
                "replicative": true,
                "savepoints": {
                  "second_savepoint": {
                    "statements": [
                      "%c_param% = 2;"
                    ]
                  }
                }
              }
            },
            "category": "base",
            "comment": "Invoke the third test callback.",
            "declarations": {
              "environment model": {
                "& c": "extern void c(int param);"
              }
            },
            "labels": {
              "c_param": {
                "declaration": "int c_param",
                "value": "0"
              }
            },
            "process": "(!register_c).<call_c>"
          }
        },
        "main process": {
          "actions": {
            "register_base": {
              "comment": "Activate the first calling callbacks transition system.",
              "parameters": []
            }
          },
          "category": "entry_point",
          "comment": "Main process.",
          "labels": {},
          "process": "[register_base]"
        }
      }
    },
    {
      "fragments": [
        "ext-modules/decomposition_selective_default/basic.ko",
        "ext-modules/decomposition_selective_default/child_savepoints.ko",
        "ext-modules/decomposition_selective_linear/basic.ko",
        "ext-modules/decomposition_selective_linear/child_savepoints.ko"
      ],
      "model": {
        "functions models": {},
        "environment processes": {
          "cat/first_child": {
            "actions": {
              "register_c1": {
                "comment": "Start actions of the first child.",
                "require": {
                  "processes": {"entry_point/main": true},
                  "actions": {
                    "entry_point/main": ["first_branch"]
                  }
                },
                "savepoints": {
                  "first_savepoint": {
                    "statements": ["%sp% = 1;"]
                  },
                  "second_savepoint": {
                    "statements": ["%sp% = 2;"]
                  }
                }
              },
              "deregister_c1": {
                "comment": "End actions of the first child."
              },
              "first_branch": {
                "comment": "Call the first branch.",
                "trace relevant": true,
                "statements": [
                  "%branch% = 1;",
                  "first_callback(%branch%, %sp%);"
                ]
              },
              "second_branch": {
                "comment": "Call the second branch.",
                "trace relevant": true,
                "statements": [
                  "%branch% = 2;",
                  "first_callback(%branch%, %sp%);"
                ]
              }
            },
            "comment": "The first child.",
            "labels": {
              "branch": {
                "declaration": "int branch",
                "value": "0"
              },
              "sp": {
                "declaration": "int sp",
                "value": "0"
              }
            },
            "declarations": {
              "environment model": {
                "second_callback": "extern void second_callback(int branch, int sp);"
              }
            },
            "process": "(!register_c1).(<first_branch> | <second_branch>).(deregister_c1)"
          },
          "cat/second_child": {
            "actions": {
              "register_c2": {
                "comment": "Start actions of the second child.",
                "require": {
                  "processes": {
                    "entry_point/main": true
                  },
                  "actions": {
                    "entry_point/main": ["second_branch"]
                  }
                },
                "savepoints": {
                  "third_savepoint": {
                    "statements": ["%sp% = 1;"]
                  },
                  "fourth_savepoint": {
                    "statements": ["%sp% = 2;"]
                  }
                }
              },
              "deregister_c2": {
                "comment": "End actions of the second child."
              },
              "first_branch": {
                "comment": "Call the first branch.",
                "trace relevant": true,
                "statements": [
                  "%branch% = 1;",
                  "second_callback(%branch%, %sp%);"
                ]
              },
              "second_branch": {
                "comment": "Call the second branch.",
                "trace relevant": true,
                "statements": [
                  "%branch% = 2;",
                  "second_callback(%branch%, %sp%);"
                ]
              }
            },
            "comment": "The first child.",
            "labels": {
              "branch": {
                "declaration": "int branch",
                "value": "0"
              },
              "sp": {
                "declaration": "int sp",
                "value": "0"
              }
            },
            "declarations": {
              "environment model": {
                "main_callback": "extern void main_callback(int branch);"
              }
            },
            "process": "(!register_c2).(<first_branch> | <second_branch>).(deregister_c2)"
          }
        },
        "main process": {
          "actions": {
            "register_c1": {
              "comment": "Register the first child."
            },
            "deregister_c1": {
              "comment": "Deregister the first child."
            },
            "register_c2": {
              "comment": "Register the second child."
            },
            "deregister_c2": {
              "comment": "Deregister the second child."
            },
            "first_branch": {
              "comment": "Call the first branch.",
              "trace relevant": true,
              "statements": [
                "%branch% = 1;",
                "main_callback(%branch%);"
              ]
            },
            "second_branch": {
              "comment": "Call the second branch.",
              "trace relevant": true,
              "statements": [
                "%branch% = 2;",
                "main_callback(%branch%);"
              ]
            },
            "init": {
              "comment": "Artificial action to avoid several initial actions.",
              "statements": []
            }
          },
          "category": "entry_point",
          "comment": "Main process.",
          "labels": {
            "branch": {
              "declaration": "int branch",
              "value": "0"
            }
          },
          "declarations": {
            "environment model": {
              "first_callback": "extern void first_callback(int branch, int sp);"
            }
          },
          "process": "<init>.([register_c1].<first_branch>.[deregister_c1] | [register_c2].<second_branch>.[deregister_c2])"
        }
      }
    }
  ]
}